import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import precision_score, recall_score
from imblearn.over_sampling import RandomOverSampler
from imblearn.under_sampling import RandomUnderSampler
from imblearn.metrics import classification_report_imbalanced


data = pd.read_csv('/content/creditcard.csv')


X = data.drop('Class', axis=1)  
y = data['Class']  


scaler = StandardScaler()
X = scaler.fit_transform(X)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


ros = RandomOverSampler()
X_train_oversampled, y_train_oversampled = ros.fit_resample(X_train, y_train)


rus = RandomUnderSampler()
X_train_undersampled, y_train_undersampled = rus.fit_resample(X_train, y_train)


clf_original = LogisticRegression()
clf_original.fit(X_train, y_train)


clf_oversampled = LogisticRegression()
clf_oversampled.fit(X_train_oversampled, y_train_oversampled)


clf_undersampled = LogisticRegression()
clf_undersampled.fit(X_train_undersampled, y_train_undersampled)


y_pred_original = clf_original.predict(X_test)


y_pred_oversampled = clf_oversampled.predict(X_test)


y_pred_undersampled = clf_undersampled.predict(X_test)


print("Original Data Classification Report:")
print(classification_report_imbalanced(y_test, y_pred_original))

print("Oversampled Data Classification Report:")
print(classification_report_imbalanced(y_test, y_pred_oversampled))

print("Undersampled Data Classification Report:")
print(classification_report_imbalanced(y_test, y_pred_undersampled))


precision_original = precision_score(y_test, y_pred_original)
recall_original = recall_score(y_test, y_pred_original)

print("Original Data Precision:", precision_original)
print("Original Data Recall:", recall_original)


precision_oversampled = precision_score(y_test, y_pred_oversampled)
recall_oversampled = recall_score(y_test, y_pred_oversampled)

print("Oversampled Data Precision:", precision_oversampled)
print("Oversampled Data Recall:", recall_oversampled)

precision_undersampled = precision_score(y_test, y_pred_undersampled)
recall_undersampled = recall_score(y_test, y_pred_undersampled)

print("Undersampled Data Precision:", precision_undersampled)
print("Undersampled Data Recall:", recall_undersampled)
